// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `IService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace DataProcess
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface communication : Ice.Object, communicationOperations_, communicationOperationsNC_
    {
    }
}

namespace DataProcess
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_communication_SendCollectVal(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_communication_GetCollectVal(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_communication_send(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_communication_receive(string ret__);
}

namespace DataProcess
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface communicationPrx : Ice.ObjectPrx
    {
        bool SendCollectVal(string content);
        bool SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<DataProcess.Callback_communication_SendCollectVal> begin_SendCollectVal(string content);
        Ice.AsyncResult<DataProcess.Callback_communication_SendCollectVal> begin_SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_SendCollectVal(string content, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_SendCollectVal(Ice.AsyncResult r__);

        string GetCollectVal(string strKey);
        string GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<DataProcess.Callback_communication_GetCollectVal> begin_GetCollectVal(string strKey);
        Ice.AsyncResult<DataProcess.Callback_communication_GetCollectVal> begin_GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_GetCollectVal(string strKey, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_GetCollectVal(Ice.AsyncResult r__);

        string send(string content);
        string send(string content, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<DataProcess.Callback_communication_send> begin_send(string content);
        Ice.AsyncResult<DataProcess.Callback_communication_send> begin_send(string content, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_send(string content, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_send(string content, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_send(Ice.AsyncResult r__);

        string receive(string command);
        string receive(string command, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<DataProcess.Callback_communication_receive> begin_receive(string command);
        Ice.AsyncResult<DataProcess.Callback_communication_receive> begin_receive(string command, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_receive(string command, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_receive(string command, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_receive(Ice.AsyncResult r__);
    }
}

namespace DataProcess
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface communicationOperations_
    {
        bool SendCollectVal(string content, Ice.Current current__);

        string GetCollectVal(string strKey, Ice.Current current__);

        string send(string content, Ice.Current current__);

        string receive(string command, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface communicationOperationsNC_
    {
        bool SendCollectVal(string content);

        string GetCollectVal(string strKey);

        string send(string content);

        string receive(string command);
    }
}

namespace DataProcess
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class communicationPrxHelper : Ice.ObjectPrxHelperBase, communicationPrx
    {
        #region Synchronous operations

        public string GetCollectVal(string strKey)
        {
            return GetCollectVal(strKey, null, false);
        }

        public string GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return GetCollectVal(strKey, context__, true);
        }

        private string GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("GetCollectVal");
                    delBase__ = getDelegate__(false);
                    communicationDel_ del__ = (communicationDel_)delBase__;
                    return del__.GetCollectVal(strKey, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public bool SendCollectVal(string content)
        {
            return SendCollectVal(content, null, false);
        }

        public bool SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return SendCollectVal(content, context__, true);
        }

        private bool SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("SendCollectVal");
                    delBase__ = getDelegate__(false);
                    communicationDel_ del__ = (communicationDel_)delBase__;
                    return del__.SendCollectVal(content, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string receive(string command)
        {
            return receive(command, null, false);
        }

        public string receive(string command, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return receive(command, context__, true);
        }

        private string receive(string command, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("receive");
                    delBase__ = getDelegate__(false);
                    communicationDel_ del__ = (communicationDel_)delBase__;
                    return del__.receive(command, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string send(string content)
        {
            return send(content, null, false);
        }

        public string send(string content, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return send(content, context__, true);
        }

        private string send(string content, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("send");
                    delBase__ = getDelegate__(false);
                    communicationDel_ del__ = (communicationDel_)delBase__;
                    return del__.send(content, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<DataProcess.Callback_communication_GetCollectVal> begin_GetCollectVal(string strKey)
        {
            return begin_GetCollectVal(strKey, null, false, null, null);
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_GetCollectVal> begin_GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_GetCollectVal(strKey, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_GetCollectVal(string strKey, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetCollectVal(strKey, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetCollectVal(strKey, ctx__, true, cb__, cookie__);
        }

        private const string __GetCollectVal_name = "GetCollectVal";

        public string end_GetCollectVal(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __GetCollectVal_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<DataProcess.Callback_communication_GetCollectVal> begin_GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__GetCollectVal_name);
            IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_GetCollectVal> result__ =  new IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_GetCollectVal>(this, __GetCollectVal_name, GetCollectVal_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__GetCollectVal_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(strKey);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void GetCollectVal_completed__(Ice.AsyncResult r__, DataProcess.Callback_communication_GetCollectVal cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_GetCollectVal(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_SendCollectVal> begin_SendCollectVal(string content)
        {
            return begin_SendCollectVal(content, null, false, null, null);
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_SendCollectVal> begin_SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_SendCollectVal(content, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_SendCollectVal(string content, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_SendCollectVal(content, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_SendCollectVal(content, ctx__, true, cb__, cookie__);
        }

        private const string __SendCollectVal_name = "SendCollectVal";

        public bool end_SendCollectVal(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __SendCollectVal_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<DataProcess.Callback_communication_SendCollectVal> begin_SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__SendCollectVal_name);
            IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_SendCollectVal> result__ =  new IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_SendCollectVal>(this, __SendCollectVal_name, SendCollectVal_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__SendCollectVal_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(content);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void SendCollectVal_completed__(Ice.AsyncResult r__, DataProcess.Callback_communication_SendCollectVal cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_SendCollectVal(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_receive> begin_receive(string command)
        {
            return begin_receive(command, null, false, null, null);
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_receive> begin_receive(string command, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_receive(command, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_receive(string command, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_receive(command, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_receive(string command, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_receive(command, ctx__, true, cb__, cookie__);
        }

        private const string __receive_name = "receive";

        public string end_receive(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __receive_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<DataProcess.Callback_communication_receive> begin_receive(string command, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__receive_name);
            IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_receive> result__ =  new IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_receive>(this, __receive_name, receive_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__receive_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(command);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void receive_completed__(Ice.AsyncResult r__, DataProcess.Callback_communication_receive cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_receive(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_send> begin_send(string content)
        {
            return begin_send(content, null, false, null, null);
        }

        public Ice.AsyncResult<DataProcess.Callback_communication_send> begin_send(string content, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_send(content, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_send(string content, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_send(content, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_send(string content, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_send(content, ctx__, true, cb__, cookie__);
        }

        private const string __send_name = "send";

        public string end_send(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __send_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<DataProcess.Callback_communication_send> begin_send(string content, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__send_name);
            IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_send> result__ =  new IceInternal.TwowayOutgoingAsync<DataProcess.Callback_communication_send>(this, __send_name, send_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__send_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(content);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void send_completed__(Ice.AsyncResult r__, DataProcess.Callback_communication_send cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_send(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static communicationPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            communicationPrx r = b as communicationPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                communicationPrxHelper h = new communicationPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static communicationPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            communicationPrx r = b as communicationPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                communicationPrxHelper h = new communicationPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static communicationPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    communicationPrxHelper h = new communicationPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static communicationPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    communicationPrxHelper h = new communicationPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static communicationPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            communicationPrx r = b as communicationPrx;
            if(r == null)
            {
                communicationPrxHelper h = new communicationPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static communicationPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            communicationPrxHelper h = new communicationPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::DataProcess::communication",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new communicationDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new communicationDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, communicationPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static communicationPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                communicationPrxHelper result = new communicationPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace DataProcess
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface communicationDel_ : Ice.ObjectDel_
    {
        bool SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> context__);

        string GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> context__);

        string send(string content, _System.Collections.Generic.Dictionary<string, string> context__);

        string receive(string command, _System.Collections.Generic.Dictionary<string, string> context__);
    }
}

namespace DataProcess
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class communicationDelM_ : Ice.ObjectDelM_, communicationDel_
    {
        public string GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("GetCollectVal", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(strKey);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public bool SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("SendCollectVal", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(content);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string receive(string command, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("receive", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(command);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string send(string content, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("send", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(content);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace DataProcess
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class communicationDelD_ : Ice.ObjectDelD_, communicationDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string GetCollectVal(string strKey, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "GetCollectVal", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                communication servant__ = null;
                try
                {
                    servant__ = (communication)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.GetCollectVal(strKey, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool SendCollectVal(string content, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "SendCollectVal", Ice.OperationMode.Normal, context__);
            bool result__ = false;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                communication servant__ = null;
                try
                {
                    servant__ = (communication)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.SendCollectVal(content, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string receive(string command, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "receive", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                communication servant__ = null;
                try
                {
                    servant__ = (communication)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.receive(command, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string send(string content, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "send", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                communication servant__ = null;
                try
                {
                    servant__ = (communication)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.send(content, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }
    }
}

namespace DataProcess
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class communicationDisp_ : Ice.ObjectImpl, communication
    {
        #region Slice operations

        public bool SendCollectVal(string content)
        {
            return SendCollectVal(content, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool SendCollectVal(string content, Ice.Current current__);

        public string GetCollectVal(string strKey)
        {
            return GetCollectVal(strKey, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string GetCollectVal(string strKey, Ice.Current current__);

        public string send(string content)
        {
            return send(content, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string send(string content, Ice.Current current__);

        public string receive(string command)
        {
            return receive(command, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string receive(string command, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::DataProcess::communication",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus SendCollectVal___(communication obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string content;
            content = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            bool ret__ = obj__.SendCollectVal(content, current__);
            os__.writeBool(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus GetCollectVal___(communication obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string strKey;
            strKey = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.GetCollectVal(strKey, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus send___(communication obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string content;
            content = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.send(content, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus receive___(communication obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string command;
            command = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.receive(command, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "GetCollectVal",
            "SendCollectVal",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "receive",
            "send"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return GetCollectVal___(this, inS__, current__);
                }
                case 1:
                {
                    return SendCollectVal___(this, inS__, current__);
                }
                case 2:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 3:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 6:
                {
                    return receive___(this, inS__, current__);
                }
                case 7:
                {
                    return send___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type DataProcess::communication was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type DataProcess::communication was not generated with stream support";
            throw ex;
        }

        #endregion
    }
}
